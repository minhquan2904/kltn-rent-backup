{"version":3,"sources":["./src/app/user/layout/alert/alert.component.html","./src/app/user/layout/alert/alert.component.ts","./src/app/user/layout/header/header.component.css","./src/app/user/layout/header/header.component.html","./src/app/user/layout/header/header.component.ts","./src/app/user/layout/user-table-motel/dialog.component.html","./src/app/user/layout/user-table-motel/user-table-motel.component.css","./src/app/user/layout/user-table-motel/user-table-motel.component.html","./src/app/user/layout/user-table-motel/user-table-motel.component.ts","./src/app/user/user-interface/user-interface.component.css","./src/app/user/user-interface/user-interface.component.html","./src/app/user/user-interface/user-interface.component.ts","./src/app/user/user-interface/user-routing.module.ts","./src/app/user/user-interface/user.module.ts"],"names":[],"mappings":"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","file":"user.module.chunk.js","sourcesContent":["module.exports = \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"{ 'alert': message, 'alert-success': message.type === 'success', 'alert-danger': message.type === 'error' }\\\">{{message.text}}</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/alert/alert.component.html\n// module id = ./src/app/user/layout/alert/alert.component.html\n// module chunks = user.module","import { Component, OnInit } from '@angular/core';\n\nimport { AlertService } from '../../../_services/index';\n\n@Component({\n    moduleId: module.id,\n    selector: 'user-alert',\n    templateUrl: 'alert.component.html'\n})\n\nexport class AlertComponent implements OnInit {\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.alertService.getMessage().subscribe(message => { this.message = message; });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/layout/alert/alert.component.ts","module.exports = \".contact-header {\\n    height: 40px;\\n    line-height: 40px;\\n    background: #fff url(/assets/pc_skinheader.jpg) 50% 100% no-repeat;\\n    background-size: cover;\\n    \\n}\\n.contact-float-left {\\n    float: left;\\n    color: white;\\n}\\n.contact-float-left a{\\n    color: #b0b0b0;\\n    text-decoration: none;\\n}\\na:hover {\\n    cursor: pointer;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/header/header.component.css\n// module id = ./src/app/user/layout/header/header.component.css\n// module chunks = user.module","module.exports = \"<div class=\\\"contact-header\\\">\\n    <div class=\\\"col-xs-6 contact-float-left\\\">\\n        <p><span style=\\\"padding-right: 10px\\\"><a [routerLink]=\\\"['/home']\\\">Home</a> </span></p>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/header/header.component.html\n// module id = ./src/app/user/layout/header/header.component.html\n// module chunks = user.module","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-user-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() username: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/layout/header/header.component.ts","module.exports = \"<h2 mat-dialog-title>Dialog</h2>\\n\\n\\n<mat-dialog-content >\\n    Title: {{data.title}}\\n    <mat-form-field class=\\\"col-xs-12\\\">\\n        <mat-label>Tiêu đề</mat-label>\\n        <input matInput placeholder=\\\"Tiêu đề\\\" required id=\\\"title\\\" name=\\\"title\\\" [(ngModel)]=\\\"data.title\\\"  #title=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\n        <mat-error  *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\">\\n                Title can not be blank\\n        </mat-error>\\n        \\n</mat-form-field>\\n\\n\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n\\n    <button class=\\\"mat-raised-button\\\"\\n            (click)=\\\"close()\\\">\\n        Close\\n    </button>\\n\\n    <button class=\\\"mat-raised-button mat-primary\\\"\\n            (click)=\\\"save()\\\">\\n        Save\\n    </button>\\n\\n</mat-dialog-actions>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/user-table-motel/dialog.component.html\n// module id = ./src/app/user/layout/user-table-motel/dialog.component.html\n// module chunks = user.module","module.exports = \"table {\\n    width: 100%;\\n}\\nmat-table {\\n    width: 100%;\\n    height: 100%;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/user-table-motel/user-table-motel.component.css\n// module id = ./src/app/user/layout/user-table-motel/user-table-motel.component.css\n// module chunks = user.module","module.exports = \"<!-- Lastest user -->\\n<div class=\\\"panel panel-default\\\">\\n  <div class=\\\"panel-heading\\\">\\n      <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"handleAccepted()\\\">View accepted posts</button> -->\\n      <user-alert></user-alert>\\n    </div>\\n  <div class=\\\"panel-body\\\">\\n      <mat-tab-group>\\n          <mat-tab label=\\\"Tab 1\\\">\\n            <div class=\\\"example-header\\\">\\n                <mat-form-field>\\n                  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n                </mat-form-field>\\n              </div>\\n            <mat-table #table [dataSource]=\\\"dataSource\\\">\\n\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"position\\\">\\n              <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element; let i = index\\\"> {{i+1}} </mat-cell>\\n            </ng-container>\\n        \\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"created\\\">\\n              <mat-header-cell *matHeaderCellDef > Created date </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.created_at | date}} </mat-cell>\\n            </ng-container>\\n        \\n          \\n        \\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"address\\\">\\n              <mat-header-cell *matHeaderCellDef> Status </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.status == 1 ? 'Accepted' : 'Pending'}} </mat-cell>\\n            </ng-container>\\n            <!-- Point Column -->\\n            <ng-container matColumnDef=\\\"point\\\">\\n              <mat-header-cell *matHeaderCellDef> Point </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.rating}} </mat-cell>\\n            </ng-container>\\n             <!-- Expired Column -->\\n             <ng-container matColumnDef=\\\"expired\\\">\\n              <mat-header-cell *matHeaderCellDef> Expired </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.expired}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"action\\\">\\n                <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element; let j = index\\\"> \\n                  <a mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/item', element._id]\\\" \\n                    target=\\\"_blank\\\">View</a> \\n                    <button mat-raised-button *ngIf=\\\"element.expired === false\\\" (click)=\\\"handleUpdateExpired(element._id, element.expired)\\\" \\n                    color=\\\"warn\\\">Set Expired</button>\\n                    <button mat-raised-button *ngIf=\\\"element.expired === true\\\" (click)=\\\"handleUpdateExpired(element._id, element.expired)\\\" \\n                    color=\\\"primary\\\">Set Available</button>\\n                    <button mat-raised-button color=\\\"accent\\\" (click)=\\\"openDialog(element)\\\">Update</button>\\n                </mat-cell>\\n              </ng-container>\\n        \\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n          </mat-table>\\n          <mat-paginator #paginator\\n              [pageSize]=\\\"10\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n              [showFirstLastButtons]=\\\"true\\\">\\n          </mat-paginator>  \\n            \\n        \\n                   \\n        </mat-tab>\\n        <mat-tab label=\\\"Tab 2\\\" *ngIf=\\\"viewAccepted\\\">\\n            <div class=\\\"example-header\\\">\\n                <mat-form-field>\\n                  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n                </mat-form-field>\\n              </div>\\n            <mat-table #table [dataSource]=\\\"dataSourceAccepted\\\">\\n\\n            <!-- Position Column -->\\n            <ng-container matColumnDef=\\\"position\\\">\\n              <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element; let i = index\\\"> {{i+1}} </mat-cell>\\n            </ng-container>\\n        \\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"created\\\">\\n              <mat-header-cell *matHeaderCellDef > Created date </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> Demo day </mat-cell>\\n            </ng-container>\\n        \\n          \\n        \\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"address\\\">\\n              <mat-header-cell *matHeaderCellDef> Address </mat-header-cell>\\n              <mat-cell *matCellDef=\\\"let element\\\"> {{element.add}}, {{element.street}}, {{element.ward}}, {{element.district}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- Symbol Column -->\\n            <ng-container matColumnDef=\\\"action\\\">\\n                <mat-header-cell *matHeaderCellDef> Action </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let element; let j = index\\\"> \\n                  <a mat-raised-button color=\\\"accent\\\" [routerLink]=\\\"['/item', element._id]\\\" \\n                    target=\\\"_blank\\\">View</a> \\n                  <button mat-raised-button (click)=\\\"handleUpdateStatus(element._id,element.customer, 0, j, 2)\\\" \\n                    >Pending</button> \\n                  <button mat-raised-button (click)=\\\"handleUpdateStatus(element._id,element.customer, -1, j, 2)\\\" \\n                   color=\\\"warn\\\">Ignore</button> \\n                </mat-cell>\\n              </ng-container>\\n        \\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n          </mat-table>\\n          <mat-paginator #paginator2\\n              [pageSize]=\\\"10\\\"\\n              [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n              [showFirstLastButtons]=\\\"true\\\">\\n          </mat-paginator> \\n        </mat-tab>\\n        </mat-tab-group>\\n      \\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/user-table-motel/user-table-motel.component.html\n// module id = ./src/app/user/layout/user-table-motel/user-table-motel.component.html\n// module chunks = user.module","import { Component, OnInit, ViewChild, Inject } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { MatTableDataSource, MatPaginator, MatDialog, MatDialogConfig, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nimport { MotelService, AlertService, AuthenticationService } from '../../../_services/index';\nimport { Motel} from '../../../_models/index';\nimport { CourseDialogComponent} from '../dialog/dialog.component';\n@Component({\n  selector: 'app-user-table-motel',\n  templateUrl: './user-table-motel.component.html',\n  styleUrls: ['./user-table-motel.component.css']\n})\nexport class UserTableMotelComponent implements OnInit {\n  viewAccepted = false;\n  listMotel: any;\n  displayedColumns= ['position', 'created', 'address', 'point', 'expired', 'action'];\n  // displayedColumns = ['position', 'name', 'weight', 'symbol'];\n  dataSource: any;  // = new MatTableDataSource(ELEMENT_DATA);\n  dataSourceAccepted: any; //\n  data: any;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatPaginator) paginator2: MatPaginator;\n\n  constructor(private authService: AuthenticationService,\n    private motelService: MotelService, private alertService: AlertService,\n    private dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.motelService.findByUser(this.authService.userID).subscribe(res => {\n      this.dataSource = new MatTableDataSource(res);\n      this.dataSource.paginator = this.paginator;\n    }, err => {\n      this.alertService.error(err);\n    });\n\n  }\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource.filter = filterValue;\n  }\n\n  handleUpdateExpired(id, expired) {\n    const motel = {\n      expired: !expired\n    };\n\n    this.motelService.update(id, motel).subscribe(res => {\n      this.alertService.success('Update ok');\n    }, err => {\n      this.alertService.error(err);\n    });\n  }\n  openDialog(dt) {\n    console.log(dt.title);\n    const dialogConfig = new MatDialogConfig();\n\n    // dialogConfig.disableClose = true;\n    // dialogConfig.autoFocus = true;\n    // dialogConfig.data = {\n    //   title: data.title\n    // };\n\n    this.dialog.open(DialogDataComponent, {\n      data: {\n        title: dt.title\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'app-dialog-data',\n  templateUrl: 'dialog.component.html',\n})\nexport class DialogDataComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogDataComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/layout/user-table-motel/user-table-motel.component.ts","module.exports = \".container-fluid {\\n    background-color: #C5CAE9;\\n    height: 100%;\\n}\\n.example-h2 {\\n    margin: 10px;\\n    background-color: #3F51B5;\\n    color: white;\\n    font-weight: bolder;\\n    text-align: center;\\n   \\n  }\\n.example-section {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-line-pack: center;\\n        align-content: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    height: 60px;\\n}\\n.example-margin {\\n    margin: 0 10px;\\n}\\n.wrapper {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: 1fr 8fr 1fr;\\n        grid-template-columns: 1fr 8fr 1fr;\\n    grid-gap: 5px;\\n    text-align: center;\\n}\\n.mat-card {\\n    margin: 10px;\\n}\\n.wrapper p{\\n    padding: 10px;\\n}\\n.btn-wrapper {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: 50% 50%;\\n        grid-template-columns: 50% 50%;\\n    text-align: center;\\n}\\n.mat-card-image {\\n    vertical-align: middle;\\n    border-radius: 50%;\\n    margin: auto;\\n    width: 250px;\\n    height: 250px;\\n    padding-top: 20px; \\n}\\n.mat-card-password {\\n    width: calc(100%-100px);\\n    margin: 0 auto;\\n}\\n.spinner-percent {\\n    position: relative;\\n\\n}\\n.percent{\\n    position: absolute;\\n    width: 50px;\\n    height: 50px;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n    margin: 0!important;\\n    padding: 0!important;\\n    font-size: 20px;\\n}\\n.footer-distributed{\\n\\tbackground: url(/assets/pc_skinfooter.jpg) 50% 100% no-repeat;\\t\\n\\t-webkit-box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);\\t\\n\\t        box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);\\n    -webkit-box-sizing: border-box;\\n            box-sizing: border-box;\\n    min-height: 200px;\\n\\twidth: 100%;\\n\\ttext-align: left;\\n\\tfont: bold 16px sans-serif;\\n\\tbackground-size: cover;\\n\\tpadding: 55px 50px;\\n\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-interface/user-interface.component.css\n// module id = ./src/app/user/user-interface/user-interface.component.css\n// module chunks = user.module","module.exports = \"<app-user-header [username]=\\\"user.firstname\\\"></app-user-header>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\" style=\\\"margin-top: 65px;\\\">\\n    <div class=\\\"col-sm-3 col-xs-12\\\">\\n        <mat-card>\\n          <div class=\\\"img-avt\\\">\\n              <img class=\\\"img-responsive\\\" mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n          </div>\\n            \\n            <div class=\\\"text-center\\\"> \\n              <button mat-button color=\\\"primary\\\">Update</button>\\n            </div>\\n           \\n          </mat-card>\\n          <mat-card>\\n            <mat-card-content>\\n              <h4 class=\\\"example-h2\\\">Level {{user?.rating.level}}</h4>\\n              <div class=\\\"wrapper\\\">\\n                <div></div>\\n                <div>\\n                  <div clas=\\\"spinner-percent\\\">\\n                      <mat-progress-spinner\\n                      style=\\\"margin:0 auto;\\\"\\n                      class=\\\"example-margin\\\"\\n                      [color]=\\\"color\\\"\\n                      [mode]=\\\"mode\\\"\\n                      [value]=\\\"value\\\">\\n                    </mat-progress-spinner>\\n\\n                    <p class=\\\"percent\\\">{{value}}%</p>\\n                  </div>\\n                    \\n                  <p>Your exp: {{user?.rating.exp}}/{{maxExp}}</p> \\n                </div>\\n                <div></div>\\n              </div>\\n              \\n            </mat-card-content>\\n          </mat-card>\\n    </div>\\n    <div class=\\\"col-sm-9 col-xs-12\\\">\\n      <mat-card style=\\\"height:100%;\\\" *ngIf=\\\"isShowListMotel\\\">\\n          <mat-card-content>\\n              <h4 class=\\\"example-h2\\\">Your infomation</h4>\\n              \\n          </mat-card-content>\\n          <mat-card-content>\\n              <mat-accordion class=\\\"example-headers-align\\\">\\n                  <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle=\\\"true\\\">\\n                    <mat-expansion-panel-header>\\n                      <mat-panel-title>\\n                        Personal data\\n                      </mat-panel-title>\\n                      <mat-panel-description>\\n                        Type your name\\n                        <mat-icon>account_circle</mat-icon>\\n                      </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"First name\\\" [(ngModel)]= \\\"user.firstname\\\" #firstname=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                      <mat-error  *ngIf=\\\"firstname.invalid && (firstname.dirty || firstname.touched)\\\">\\n                        Firstname can not be blank\\n                      </mat-error>\\n                    </mat-form-field>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Last name\\\" [(ngModel)]= \\\"user.lastname\\\" #lastname=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                      <mat-error  *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\">\\n                        Lastname can not be blank\\n                      </mat-error>\\n                    </mat-form-field>\\n                \\n                    <mat-action-row>\\n                      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n                    </mat-action-row>\\n                  </mat-expansion-panel>\\n                \\n                  <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle=\\\"true\\\">\\n                    <mat-expansion-panel-header>\\n                      <mat-panel-title>\\n                        Contact infomation\\n                      </mat-panel-title>\\n                      <mat-panel-description>\\n                        Type your email and phone\\n                        <mat-icon>map</mat-icon>\\n                      </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Email\\\" email [(ngModel)]= \\\"user.email\\\" #email=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Phone\\\" phone [(ngModel)]= \\\"user.phone\\\" #phone=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </mat-form-field>\\n                \\n                    <mat-action-row>\\n                      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n                      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n                    </mat-action-row>\\n                  </mat-expansion-panel>\\n                \\n                  <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle=\\\"true\\\">\\n                    <mat-expansion-panel-header>\\n                      <mat-panel-title>\\n                        About yourself\\n                      </mat-panel-title>\\n                      <mat-panel-description>\\n                        Type something about yourself\\n                        <mat-icon>date_range</mat-icon>\\n                      </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"...\\\" >\\n                    </mat-form-field>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                \\n                    <mat-action-row>\\n                      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n                      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep(); update()\\\">End</button>\\n                    </mat-action-row>\\n                  </mat-expansion-panel>\\n                \\n                </mat-accordion>\\n          </mat-card-content>\\n          <mat-card-footer>\\n            <div class=\\\"btn-wrapper\\\">\\n              <div>\\n                <button mat-raised-button color=\\\"warn\\\" (click)= \\\"changePasswordFlag=!changePasswordFlag\\\">Change password</button>\\n              </div>\\n              <div>\\n                  <button mat-raised-button style=\\\"background-color: #8C9EFF!important\\\" (click)=\\\"onSeeMotel()\\\">See Your posts</button>\\n                </div>\\n            </div> \\n            \\n          </mat-card-footer>\\n      </mat-card>\\n      <app-user-table-motel *ngIf=\\\"!isShowListMotel\\\"></app-user-table-motel>\\n      <button mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!isShowListMotel\\\" (click)=\\\"onSeeMotel()\\\"> Return to Infomation</button>\\n      <mat-card *ngIf=\\\"changePasswordFlag\\\">\\n        <div class=\\\"mat-card-password\\\">\\n            <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Current password\\\"  [(ngModel)]= \\\"password.oldPassword\\\" #oldPassword=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\n              </mat-form-field>\\n              <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"New password\\\" [(ngModel)]= \\\"password.newPassword\\\" #newPassword=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              </mat-form-field>\\n              <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Confirm new password\\\" [(ngModel)]= \\\"password.confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              </mat-form-field>\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"changePassword()\\\">Change</button>\\n            </div>\\n      </mat-card>\\n    </div>\\n  </div>\\n  <div class=\\\"footer-distributed\\\"></div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-interface/user-interface.component.html\n// module id = ./src/app/user/user-interface/user-interface.component.html\n// module chunks = user.module","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource, MatPaginator} from '@angular/material';\n\nimport { AuthenticationService, AlertService, LevelService } from '../../_services/index';\nimport { CourseDialogComponent} from '../layout/dialog/dialog.component';\n@Component({\n  selector: 'app-user-interface',\n  templateUrl: './user-interface.component.html',\n  styleUrls: ['./user-interface.component.css']\n})\nexport class UserInterfaceComponent implements OnInit {\n\n  constructor(\n    private authService: AuthenticationService,\n    private alertService: AlertService,\n    private levelService: LevelService) { }\n  changePasswordFlag = false; // flag show card to change password\n  color = 'primary';\n  mode = 'determinate';\n  value = 80; // progress spinner value\n  maxExp = 60; // exp to level up\n  step = 0;\n  user: any = {};\n  password: any = {}; // model to change password\n  isShowListMotel: Boolean = true; // flag to show list motel\n  id: any;\n  ngOnInit() {\n    this.id = JSON.parse(localStorage.getItem('currentUser'))._id;\n    this.getUser(this.id);\n    console.log(this.user);\n  }\n  getUser(id) {\n    this.authService.findById(id)\n      .subscribe( res => {\n        this.user = res;\n        this.maxExp = this.user.rating.level * 60 * 1.5;\n        console.log(this.user.rating.exp);\n        this.value = Math.trunc((this.user.rating.exp / this.maxExp) * 100);\n      }, err => {\n        this.alertService.error(err);\n      });\n  }\n  update() {\n    this.authService.update(JSON.parse(localStorage.getItem('currentUser'))._id, this.user)\n      .subscribe(res => {\n        this.alertService.success('Update success');\n      }, err => {\n        this.alertService.error(err);\n      });\n  }\n  changePassword() {\n    if (this.password.newPassword !== this.password.confirmPassword) {\n      this.alertService.error('Password confirm incorect');\n    } else {\n      if (this.password.newPassword.lenght < 8 || this.password.confirmPassword.length < 8) {\n        this.alertService.error('Password must have at least 8 character');\n      } else {\n        this.authService.changePassword(JSON.parse(localStorage.getItem('currentUser'))._id, this.password)\n          .subscribe(res => {\n            this.alertService.success('change success');\n          }, err => {\n            this.alertService.error(err);\n          });\n      }\n    }\n  }\n  onSeeMotel() {\n    this.isShowListMotel = !this.isShowListMotel;\n  }\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-interface/user-interface.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserInterfaceComponent } from './user-interface.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserInterfaceComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-interface/user-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatFormFieldModule\n  } from '@angular/material';\n\n\n  import { UserRoutingModule } from './user-routing.module';\nimport { UserInterfaceComponent } from './user-interface.component';\nimport { HeaderComponent } from '../layout/header/header.component';\nimport { UserTableMotelComponent, DialogDataComponent } from '../layout/user-table-motel/user-table-motel.component';\nimport { AlertComponent } from '../layout/alert/alert.component';\n// import { CourseDialogComponent } from '../layout/dialog/dialog.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  FormsModule, ReactiveFormsModule\n  ],\n  declarations: [UserInterfaceComponent, HeaderComponent, UserTableMotelComponent, AlertComponent, DialogDataComponent],\n  entryComponents: [UserTableMotelComponent, DialogDataComponent ]\n})\nexport class UserModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-interface/user.module.ts"],"sourceRoot":"webpack:///"}