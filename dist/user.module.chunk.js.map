{"version":3,"sources":["./src/app/user/layout/header/header.component.css","./src/app/user/layout/header/header.component.html","./src/app/user/layout/header/header.component.ts","./src/app/user/user-interface/user-interface.component.css","./src/app/user/user-interface/user-interface.component.html","./src/app/user/user-interface/user-interface.component.ts","./src/app/user/user-interface/user-routing.module.ts","./src/app/user/user-interface/user.module.ts"],"names":[],"mappings":"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","file":"user.module.chunk.js","sourcesContent":["module.exports = \".contact-header {\\n    height: 40px;\\n    line-height: 40px;\\n    background: #fff url(/assets/pc_skinheader.jpg) 50% 100% no-repeat;\\n    background-size: cover;\\n    \\n}\\n.contact-float-left {\\n    float: left;\\n    color: white;\\n}\\n.contact-float-left a{\\n    color: #b0b0b0;\\n    text-decoration: none;\\n}\\na:hover {\\n    cursor: pointer;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/header/header.component.css\n// module id = ./src/app/user/layout/header/header.component.css\n// module chunks = user.module","module.exports = \"<div class=\\\"contact-header\\\">\\n    <div class=\\\"col-xs-6 contact-float-left\\\">\\n        <p><span style=\\\"padding-right: 10px\\\">Hello {{username}} </span></p>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/layout/header/header.component.html\n// module id = ./src/app/user/layout/header/header.component.html\n// module chunks = user.module","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-user-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() username: string;\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/layout/header/header.component.ts","module.exports = \".container-fluid {\\n    background-color: #C5CAE9;\\n    height: 100%;\\n}\\n.example-h2 {\\n    margin: 10px;\\n    background-color: #3F51B5;\\n    color: white;\\n    font-weight: bolder;\\n    text-align: center;\\n   \\n  }\\n.example-section {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-line-pack: center;\\n        align-content: center;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    height: 60px;\\n}\\n.example-margin {\\n    margin: 0 10px;\\n}\\n.wrapper {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: 1fr 8fr 1fr;\\n        grid-template-columns: 1fr 8fr 1fr;\\n    grid-gap: 5px;\\n    text-align: center;\\n}\\n.mat-card {\\n    margin: 10px;\\n}\\n.wrapper p{\\n    padding: 10px;\\n}\\n.btn-wrapper {\\n    display: -ms-grid;\\n    display: grid;\\n    -ms-grid-columns: 50% 50%;\\n        grid-template-columns: 50% 50%;\\n    text-align: center;\\n}\\n.mat-card-image {\\n    vertical-align: middle;\\n    border-radius: 50%;\\n    margin: auto;\\n    width: 250px;\\n    height: 250px;\\n    padding-top: 20px; \\n}\\n.mat-card-password {\\n    width: calc(100%-100px);\\n    margin: 0 auto;\\n}\\n.spinner-percent {\\n    position: relative;\\n\\n}\\n.percent{\\n    position: absolute;\\n    width: 50px;\\n    height: 50px;\\n    left: 50%;\\n    top: 50%;\\n    -webkit-transform: translate(-50%, -50%);\\n            transform: translate(-50%, -50%);\\n    margin: 0!important;\\n    padding: 0!important;\\n    font-size: 20px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-interface/user-interface.component.css\n// module id = ./src/app/user/user-interface/user-interface.component.css\n// module chunks = user.module","module.exports = \"<app-user-header [username]=\\\"user.firstname\\\"></app-user-header>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\" style=\\\"margin-top: 65px;\\\">\\n    <div class=\\\"col-sm-3 col-xs-12\\\">\\n        <mat-card>\\n          <div class=\\\"img-avt\\\">\\n              <img class=\\\"img-responsive\\\" mat-card-image src=\\\"https://material.angular.io/assets/img/examples/shiba2.jpg\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n          </div>\\n            \\n            <div class=\\\"text-center\\\"> \\n              <button mat-button color=\\\"primary\\\">Update</button>\\n            </div>\\n           \\n          </mat-card>\\n          <mat-card>\\n            <mat-card-content>\\n              <h4 class=\\\"example-h2\\\">Level {{user.level}}</h4>\\n              <div class=\\\"wrapper\\\">\\n                <div></div>\\n                <div>\\n                  <div clas=\\\"spinner-percent\\\">\\n                      <mat-progress-spinner\\n                      style=\\\"margin:0 auto;\\\"\\n                      class=\\\"example-margin\\\"\\n                      [color]=\\\"color\\\"\\n                      [mode]=\\\"mode\\\"\\n                      [value]=\\\"value\\\">\\n                    </mat-progress-spinner>\\n\\n                    <p class=\\\"percent\\\">{{value}}%</p>\\n                  </div>\\n                    \\n                  <p>Your exp: {{user.exp}}/{{maxExp}}</p> \\n                </div>\\n                <div></div>\\n              </div>\\n              \\n            </mat-card-content>\\n          </mat-card>\\n    </div>\\n    <div class=\\\"col-sm-9 col-xs-12\\\">\\n      <mat-card style=\\\"height:100%;\\\">\\n          <mat-card-content>\\n              <h4 class=\\\"example-h2\\\">Your infomation</h4>\\n              \\n          </mat-card-content>\\n          <mat-card-content>\\n              <mat-accordion class=\\\"example-headers-align\\\">\\n                  <mat-expansion-panel [expanded]=\\\"step === 0\\\" (opened)=\\\"setStep(0)\\\" hideToggle=\\\"true\\\">\\n                    <mat-expansion-panel-header>\\n                      <mat-panel-title>\\n                        Personal data\\n                      </mat-panel-title>\\n                      <mat-panel-description>\\n                        Type your name\\n                        <mat-icon>account_circle</mat-icon>\\n                      </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"First name\\\" [(ngModel)]= \\\"user.firstname\\\" #firstname=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                      <mat-error  *ngIf=\\\"firstname.invalid && (firstname.dirty || firstname.touched)\\\">\\n                        Firstname can not be blank\\n                      </mat-error>\\n                    </mat-form-field>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Last name\\\" [(ngModel)]= \\\"user.lastname\\\" #lastname=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" required>\\n                      <mat-error  *ngIf=\\\"lastname.invalid && (lastname.dirty || lastname.touched)\\\">\\n                        Lastname can not be blank\\n                      </mat-error>\\n                    </mat-form-field>\\n                \\n                    <mat-action-row>\\n                      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n                    </mat-action-row>\\n                  </mat-expansion-panel>\\n                \\n                  <mat-expansion-panel [expanded]=\\\"step === 1\\\" (opened)=\\\"setStep(1)\\\" hideToggle=\\\"true\\\">\\n                    <mat-expansion-panel-header>\\n                      <mat-panel-title>\\n                        Contact infomation\\n                      </mat-panel-title>\\n                      <mat-panel-description>\\n                        Type your email and phone\\n                        <mat-icon>map</mat-icon>\\n                      </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Email\\\" email [(ngModel)]= \\\"user.email\\\" #email=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </mat-form-field>\\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"Phone\\\" phone [(ngModel)]= \\\"user.phone\\\" #phone=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n                    </mat-form-field>\\n                \\n                    <mat-action-row>\\n                      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n                      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep()\\\">Next</button>\\n                    </mat-action-row>\\n                  </mat-expansion-panel>\\n                \\n                  <mat-expansion-panel [expanded]=\\\"step === 2\\\" (opened)=\\\"setStep(2)\\\" hideToggle=\\\"true\\\">\\n                    <mat-expansion-panel-header>\\n                      <mat-panel-title>\\n                        About yourself\\n                      </mat-panel-title>\\n                      <mat-panel-description>\\n                        Type something about yourself\\n                        <mat-icon>date_range</mat-icon>\\n                      </mat-panel-description>\\n                    </mat-expansion-panel-header>\\n                \\n                    <mat-form-field>\\n                      <input matInput placeholder=\\\"...\\\" >\\n                    </mat-form-field>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                \\n                    <mat-action-row>\\n                      <button mat-button color=\\\"warn\\\" (click)=\\\"prevStep()\\\">Previous</button>\\n                      <button mat-button color=\\\"primary\\\" (click)=\\\"nextStep(); update()\\\">End</button>\\n                    </mat-action-row>\\n                  </mat-expansion-panel>\\n                \\n                </mat-accordion>\\n          </mat-card-content>\\n          <mat-card-footer>\\n            <div class=\\\"btn-wrapper\\\">\\n              <div>\\n                <button mat-raised-button color=\\\"warn\\\" (click)= \\\"changePasswordFlag=!changePasswordFlag\\\">Change password</button>\\n              </div>\\n              <div>\\n                  <button mat-raised-button style=\\\"background-color: #8C9EFF!important\\\">See Your posts</button>\\n                </div>\\n            </div> \\n            \\n          </mat-card-footer>\\n      </mat-card>\\n      <mat-card *ngIf=\\\"changePasswordFlag\\\">\\n        <div class=\\\"mat-card-password\\\">\\n            <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Current password\\\"  [(ngModel)]= \\\"password.oldPassword\\\" #oldPassword=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\" >\\n              </mat-form-field>\\n              <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"New password\\\" [(ngModel)]= \\\"password.newPassword\\\" #newPassword=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              </mat-form-field>\\n              <mat-form-field>\\n                <input type=\\\"password\\\" matInput placeholder=\\\"Confirm new password\\\" [(ngModel)]= \\\"password.confirmPassword\\\" #confirmPassword=\\\"ngModel\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              </mat-form-field>\\n              <button mat-raised-button color=\\\"warn\\\" (click)=\\\"changePassword()\\\">Change</button>\\n            </div>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-interface/user-interface.component.html\n// module id = ./src/app/user/user-interface/user-interface.component.html\n// module chunks = user.module","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, AlertService, LevelService } from '../../_services/index';\n@Component({\n  selector: 'app-user-interface',\n  templateUrl: './user-interface.component.html',\n  styleUrls: ['./user-interface.component.css']\n})\nexport class UserInterfaceComponent implements OnInit {\n\n  constructor(\n    private authService: AuthenticationService,\n    private alertService: AlertService,\n    private levelService: LevelService) { }\n  changePasswordFlag = false; // flag show card to change password\n  color = 'primary';\n  mode = 'determinate';\n  value = 80; // progress spinner value\n  maxExp = 60; // exp to level up\n  step = 0;\n  user: any = {};\n  password: any = {}; // model to change password\n  ngOnInit() {\n    const id = JSON.parse(localStorage.getItem('currentUser'))._id;\n    this.getUser(id);\n    console.log(this.user);\n  }\n  getProgress() {\n    const data = {\n      num: this.user.level,\n      exp: this.user.exp\n    };\n    this.levelService.getProgress(data).subscribe( res => {\n      const result = res.json();\n      this.value = Number.parseInt(result.progress);\n      this.maxExp = result.maxExp;\n    }, err => {\n      this.alertService.error(err);\n    });\n  }\n  getUser(id) {\n    this.authService.findById(id)\n      .subscribe( res => {\n        this.user = res;\n        this.getProgress();\n      }, err => {\n        this.alertService.error(err);\n      });\n  }\n  update() {\n    this.authService.update(JSON.parse(localStorage.getItem('currentUser'))._id, this.user)\n      .subscribe(res => {\n        this.alertService.success('Update success');\n      }, err => {\n        this.alertService.error(err);\n      });\n  }\n  changePassword() {\n    if (this.password.newPassword !== this.password.confirmPassword) {\n      this.alertService.error('Password confirm incorect');\n    } else {\n      if (this.password.newPassword.lenght < 8 || this.password.confirmPassword.length < 8) {\n        this.alertService.error('Password must have at least 8 character');\n      } else {\n        this.authService.changePassword(JSON.parse(localStorage.getItem('currentUser'))._id, this.password)\n          .subscribe(res => {\n            this.alertService.success('change success');\n          }, err => {\n            this.alertService.error(err);\n          });\n      }\n    }\n  }\n  setStep(index: number) {\n    this.step = index;\n  }\n\n  nextStep() {\n    this.step++;\n  }\n\n  prevStep() {\n    this.step--;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-interface/user-interface.component.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserInterfaceComponent } from './user-interface.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserInterfaceComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-interface/user-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatFormFieldModule\n  } from '@angular/material';\n\n\n  import { UserRoutingModule } from './user-routing.module';\nimport { UserInterfaceComponent } from './user-interface.component';\nimport { HeaderComponent } from '../layout/header/header.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n  MatFormFieldModule,\n  FormsModule, ReactiveFormsModule\n  ],\n  declarations: [UserInterfaceComponent, HeaderComponent]\n})\nexport class UserModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-interface/user.module.ts"],"sourceRoot":"webpack:///"}